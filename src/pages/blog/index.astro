---
export const prerender = true;
import BlogLayout from "@/layouts/BlogLayout.astro";
import BlogPostPreview from "@components/blog/BlogPostPreview.astro";
import SearchBar from "@components/blog/SearchBar.astro";
import UserPosts from "@components/blog/UserPosts.astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

const collectionPosts: CollectionEntry<"blog">[] = await getCollection("blog");

const filteredPosts = collectionPosts.sort((a, b) => b.data.createdAt.getTime() - a.data.createdAt.getTime()).slice(0, 6);
---

<BlogLayout page="Home">
  <div class="container is-fluid">
    <h1 class="title has-text-centered">Blog</h1>

    <div class="container has-text-centered">
      <button id="createPost" class="button is-primary">Create a post</button>
    </div>

    <main class="section">
      
      <UserPosts server:defer >
        <div slot="fallback">
          <div class="spinner">
            <div class="loader is-centered "></div>
            <p>Loading...</p>
        </div>
        </div>
      </UserPosts>

      <section class="section">
        <SearchBar />
      </section>


      <section class="section">
        <h1 class="title is-1">
          Recent Posts
        </h1>
        <div class="columns is-multiline">
          {filteredPosts.map((post) => <BlogPostPreview post={post} />)}
        </div>
      </section>

    </main>
  </div>
</BlogLayout>

<script>
  import { showNotification } from "@/stores/notifcationStore";
  import { navigate } from "astro:transitions/client";
  import { accessToken } from "@/stores/authStore";

  document.addEventListener("astro:page-load", () => {
    const createPost = document.getElementById("createPost");

    if (createPost) {
      createPost.addEventListener("click", () => {
        if (accessToken.get()) {
          navigate("/blog/posts/create");
        } else {
          showNotification("You must be logged in to create a post"); 
        }
      });
    }
  });
</script>

<style>
  .spinner {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 40%;
    width: 100%;
    flex-direction: column;
    font-size: 5rem;
}
</style>