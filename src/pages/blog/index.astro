---
export const prerender = false;
import BlogLayout from "@/layouts/BlogLayout.astro";
import { type BlogPost } from "@api/BlogClient";
import BlogPostPreview from "@components/blog/BlogPostPreview.astro";
import Post from "@components/blog/Post.astro";
import { actions } from "astro:actions";
import { getCollection } from "astro:content";

let { data, error } = await actions.getPosts();

let posts: BlogPost[] | undefined = data;

if (typeof data === "undefined" && error) {
  const errorMsg = `${error.code} ${error.message}.`;
  console.error(errorMsg);
}

const postsExists = typeof posts !== "undefined";

const collectionPosts = await getCollection("blog");
---

<BlogLayout page="Home">
  <div class="container is-fluid">
    <h1 class="title has-text-centered">Blog</h1>
    <main class="section">
      <div class="columns is-multiline">
        { postsExists &&
          posts!.slice(0, 10).map((post) => (
            <div class="column is-one-third">
              <Post post={post} showLink />
            </div>
          ))
        }
      </div>

      <div class="columns is-multiline">
        {collectionPosts.map((post) => <BlogPostPreview post={post} />)}
      </div>
    </main>
  </div>
</BlogLayout>
